services:
   nginx:
      container_name: "nginx"
      build:
         context: ./nginx
         dockerfile: Dockerfile
      restart: unless-stopped
      ports:
         - "80:80"
      volumes:
         - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      networks:
         - main_network
      depends_on:
         - strapi
         - client
   client:
      container_name: "client"
      build:
         context: ./client
         dockerfile: Dockerfile
      restart: unless-stopped
      ports:
         - "3000:3000"
      networks:
         - main_network
         - strapi_network
      depends_on:
         strapi:
            condition: service_started
   strapiDB:
      container_name: "strapiDB"
      image: postgres:16-alpine
      restart: unless-stopped
      ports:
         - "5433:5432"
      environment:
         POSTGRES_DB: cms
         POSTGRES_USER: postgres
         POSTGRES_PASSWORD: beksultan
      volumes:
         - ./cms_data/cms_prod.sql:/docker-entrypoint-initdb.d/cms_prod.sql
         - strapiDB_data:/var/lib/postgresql/data
      user: "postgres"
      networks:
         - strapi_network
   strapi:
      container_name: strapi
      build:
         context: ./cms
         dockerfile: Dockerfile
      restart: unless-stopped
      environment:
         # no change
         PORT: 1337
         APP_KEYS: RD5i9SbFHgRU5fFAF4O89g==,0K9bkUDI2KDdlvDbf2Ybtw==,sDRo9OG0LVrd3p4dTKHcGg==,mi8PrTm+hxI29GmpQY9bGA==
         API_TOKEN_SALT: aMqqi4260qfhHxg3C8XXbw==
         ADMIN_JWT_SECRET: elLC1QV1E8EKS4cXasbJnA==
         TRANSFER_TOKEN_SALT: 2Mm2TehHXvdhoMUEc9XPaA==
         JWT_SECRET: oS2MxDtE+rso+P7/eOc9fQ==
         DATABASE_CLIENT: postgres
         DATABASE_PORT: 5432
         DATABASE_NAME: cms
         DATABASE_USERNAME: postgres
         DATABASE_PASSWORD: beksultan
         NODE_ENV: production
         # change
         STRAPI_ADMIN_BACKEND_URL: http://nginx
         HOST: strapi
         DATABASE_HOST: strapiDB
         PROTOCOL: http://
      volumes:
         - ./cms/config:/opt/app/config
         - ./cms/src:/opt/app/src
         - ./cms/package.json:/opt/package.json
         - ./cms/yarn.lock:/opt/yarn.lock
         - ./cms/public/uploads:/opt/app/public/uploads
         - strapi_data:/data
      ports:
         - "1337:1337"
      networks:
         - main_network
         - strapi_network
      depends_on:
         strapiDB:
            condition: service_started

volumes:
   strapi_data:
   strapiDB_data:

networks:
   main_network:
      driver: bridge
   strapi_network:
      driver: bridge
